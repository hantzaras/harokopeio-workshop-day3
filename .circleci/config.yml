version: 2.1
orbs:
  k8s: circleci/kubernetes@0.7.0

commands:
  git_checkout_from_cache:
    description: "Git checkout and save cache"
    steps:
      - restore_cache:
          keys:
            - source-v1-{{ .Branch }}-{{ .Revision }}
            - source-v1-{{ .Branch }}-
            - source-v1-
      - checkout
      - run:
          name: Compress git objects
          command: git gc
      - save_cache:
          key: source-v1-{{ .Branch }}-{{ .Revision }}
          paths:
            - ".git"
release_image:
    description: "Build image for release target and push to registry"
    parameters:
      target:
        type: string
        default: "staging"
    steps:
      - run:
          name: Building for << parameters.target >>
          command:
            echo "Building image"
            echo "Pushing image"
k8s_deploy:
    description: "Deploy to k8s cluster"
    parameters:
      k8s_svc_name:
        type: string
        default: "staging-whoami"
    steps:
      - k8s/install-kubectl
      - run:
          name: Deploying to k8s cluster for service << parameters.k8s_svc_name >>
          command: |
            echo $CA_CRT | base64 --decode > ca.crt
            kubectl --server=${KUBE_SERVER} --certificate-authority=ca.crt --token=$SERVICEACCOUNT_TOKEN apply -f k8s/whoami-deployment.yml
jobs:
  build_push:
    docker:
      - image: circleci/node:9.8.0-stretch
    steps:
      - git_checkout_from_cache

deploy:
    docker:
      - image: circleci/node:9.8.0-stretch
    steps:
      - k8s_deploy:
          k8s_svc_name: "production-whoami"
workflows:
  build_and_push_master:
    jobs:
      - build_push:
          filters:
            branches:
              only: /^main/

tagged_release_production:
    jobs:
      - build_push:
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^production.*/
      - deploy:
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^production.*/
